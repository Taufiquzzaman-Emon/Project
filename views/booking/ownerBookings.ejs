<% layout("/layouts/boilerplate") %>

<!-- Enhanced Pending Bookings Page -->
<div class="bookings-container">
  <!-- Animated Header -->
  <div class="header-section text-center mb-5">
    <div class="header-icon-wrapper">
      <i class="fas fa-calendar-check header-icon"></i>
    </div>
    <h2 class="display-5 fw-bold gradient-text mb-3">Pending Bookings</h2>
    <p class="lead text-muted mb-4">
      Manage your property reservations with ease
    </p>
    <% if (bookings.length > 0) { %>
    <div class="stats-badge">
      <i class="fas fa-clock me-2"></i>
      <span class="pending-count"><%= bookings.length %></span>
      <%= bookings.length === 1 ? 'booking' : 'bookings' %> waiting
    </div>
    <% } %>
  </div>

  <!-- Empty State -->
  <% if (bookings.length === 0) { %>
  <div class="empty-state-wrapper">
    <div class="empty-state-card">
      <div class="empty-icon">
        <i class="fas fa-calendar-alt"></i>
      </div>
      <h4 class="fw-bold mb-3">All caught up!</h4>
      <p class="text-muted mb-0">
        No pending bookings at the moment. New requests will appear here.
      </p>
    </div>
  </div>
  <% } else { %>

  <!-- Bookings Grid -->
  <div class="bookings-grid row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
    <% bookings.forEach((booking, index) => { %>
    <div
      class="col booking-item"
      data-booking-id="<%= booking._id %>"
      style="animation-delay: <%= index * 100 %>ms"
    >
      <div class="booking-card h-100">
        <!-- Status Indicator -->
        <div class="status-indicator <%= booking.status %>"></div>

        <div class="card-body p-4">
          <!-- Listing Header -->
          <div class="listing-header mb-4">
            <div class="listing-icon">
              <i class="fa-solid fa-house"></i>
            </div>
            <div class="listing-info">
              <h5 class="listing-title mb-1"><%= booking.listing.title %></h5>
              <small class="text-muted">Property Listing</small>
            </div>
          </div>

          <!-- Booking Details -->
          <div class="booking-details">
            <div class="detail-row">
              <div class="detail-icon">
                <i class="fa-solid fa-user-circle"></i>
              </div>
              <div class="detail-content">
                <span class="detail-label">Guest</span>
                <span class="detail-value"><%= booking.user.username %></span>
              </div>
            </div>

            <div class="detail-row">
              <div class="detail-icon">
                <i class="fa-solid fa-calendar-plus"></i>
              </div>
              <div class="detail-content">
                <span class="detail-label">Check-in</span>
                <span class="detail-value"
                  ><%= booking.checkin.toDateString() %></span
                >
              </div>
            </div>

            <div class="detail-row">
              <div class="detail-icon">
                <i class="fa-solid fa-calendar-minus"></i>
              </div>
              <div class="detail-content">
                <span class="detail-label">Check-out</span>
                <span class="detail-value"
                  ><%= booking.checkout.toDateString() %></span
                >
              </div>
            </div>
          </div>

          <!-- Action Buttons -->
          <div class="booking-actions mt-4">
            <form
              action="/bookings/<%= booking._id %>/accept"
              method="POST"
              class="action-form"
            >
              <button
                type="submit"
                class="btn btn-accept"
                onclick="handleBookingAction(event, 'accept')"
              >
                <span class="btn-content">
                  <i class="fa-solid fa-check me-2"></i>Accept
                </span>
                <span class="btn-loader">
                  <i class="fas fa-spinner fa-spin"></i>
                </span>
              </button>
            </form>
            <form
              action="/bookings/<%= booking._id %>/reject"
              method="POST"
              class="action-form"
            >
              <button
                type="submit"
                class="btn btn-reject"
                onclick="handleBookingAction(event, 'reject')"
              >
                <span class="btn-content">
                  <i class="fa-solid fa-xmark me-2"></i>Reject
                </span>
                <span class="btn-loader">
                  <i class="fas fa-spinner fa-spin"></i>
                </span>
              </button>
            </form>
          </div>
        </div>

        <!-- Card Footer -->
        <div class="card-footer">
          <div class="d-flex justify-content-between align-items-center">
            <small class="text-muted footer-time">
              <i class="fa-regular fa-clock me-1"></i>
              <%= booking.createdAt.toDateString() %>
            </small>
            <span class="status-badge <%= booking.status %>">
              <i
                class="fas fa-<%= booking.status === 'pending' ? 'hourglass-half' : booking.status === 'accepted' ? 'check-circle' : 'times-circle' %> me-1"
              ></i>
              <%= booking.status.charAt(0).toUpperCase() +
              booking.status.slice(1) %>
            </span>
          </div>
        </div>
      </div>
    </div>
    <% }); %>
  </div>
  <% } %>
</div>

<!-- Enhanced Styles -->
<style>
  :root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    --danger-gradient: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
    --warning-gradient: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%);
    --card-bg: rgba(255, 255, 255, 0.95);
    --glass-border: rgba(255, 255, 255, 0.2);
    --shadow-sm: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
    --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
    --shadow-xl: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }

  /* Page Background Enhancement */
  body {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    position: relative;
    min-height: 100vh;
  }

  body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle at 25% 25%,
        rgba(102, 126, 234, 0.1) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 75% 75%,
        rgba(118, 75, 162, 0.1) 0%,
        transparent 50%
      );
    pointer-events: none;
    z-index: -1;
  }

  .bookings-container {
    position: relative;
    z-index: 1;
    padding: 2rem 0;
  }

  /* Header Enhancements */
  .header-section {
    position: relative;
    padding: 2rem 0 3rem;
  }

  .header-icon-wrapper {
    display: inline-block;
    margin-bottom: 1.5rem;
  }

  .header-icon {
    font-size: 3.5rem;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: headerPulse 3s ease-in-out infinite;
  }

  .gradient-text {
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .stats-badge {
    display: inline-block;
    background: var(--primary-gradient);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-weight: 600;
    box-shadow: var(--shadow-md);
    animation: statsFloat 4s ease-in-out infinite;
  }

  /* Empty State Styling */
  .empty-state-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 300px;
  }

  .empty-state-card {
    background: var(--card-bg);
    backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    border-radius: 24px;
    padding: 3rem 2rem;
    text-align: center;
    box-shadow: var(--shadow-lg);
    max-width: 400px;
    animation: emptyStateFloat 6s ease-in-out infinite;
  }

  .empty-icon {
    font-size: 4rem;
    color: #94a3b8;
    margin-bottom: 1.5rem;
    opacity: 0.8;
  }

  /* Booking Card Enhancements */
  .booking-item {
    animation: slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) both;
  }

  .booking-card {
    position: relative;
    background: var(--card-bg);
    backdrop-filter: blur(15px);
    border: 1px solid var(--glass-border);
    border-radius: 20px;
    box-shadow: var(--shadow-sm);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  .booking-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.4),
      transparent
    );
    transition: left 0.6s ease;
  }

  .booking-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: var(--shadow-xl);
  }

  .booking-card:hover::before {
    left: 100%;
  }

  .status-indicator {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    border-radius: 20px 20px 0 0;
  }

  .status-indicator.pending {
    background: var(--warning-gradient);
  }

  .status-indicator.accepted {
    background: var(--success-gradient);
  }

  .status-indicator.rejected {
    background: var(--danger-gradient);
  }

  /* Listing Header */
  .listing-header {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .listing-icon {
    width: 55px;
    height: 55px;
    background: var(--primary-gradient);
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    box-shadow: 0 8px 16px rgba(102, 126, 234, 0.3);
    transition: transform 0.3s ease;
  }

  .booking-card:hover .listing-icon {
    transform: rotate(5deg) scale(1.1);
  }

  .listing-info {
    flex: 1;
  }

  .listing-title {
    color: #1e293b;
    font-weight: 700;
    margin-bottom: 0.25rem;
    font-size: 1.25rem;
  }

  /* Booking Details */
  .booking-details {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 1.5rem 0;
  }

  .detail-row {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: linear-gradient(
      135deg,
      rgba(248, 250, 252, 0.8) 0%,
      rgba(241, 245, 249, 0.6) 100%
    );
    border-radius: 14px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(226, 232, 240, 0.5);
  }

  .detail-row:hover {
    transform: translateX(8px);
    background: linear-gradient(
      135deg,
      rgba(241, 245, 249, 1) 0%,
      rgba(226, 232, 240, 0.8) 100%
    );
    box-shadow: var(--shadow-md);
  }

  .detail-icon {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #64748b;
    font-size: 1.1rem;
    transition: all 0.3s ease;
  }

  .detail-row:hover .detail-icon {
    background: var(--primary-gradient);
    color: white;
    transform: scale(1.1);
  }

  .detail-content {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .detail-label {
    font-size: 0.75rem;
    font-weight: 600;
    color: #64748b;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .detail-value {
    font-size: 1rem;
    font-weight: 600;
    color: #1e293b;
  }

  /* Enhanced Action Buttons */
  .booking-actions {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.75rem;
  }

  .action-form {
    margin: 0;
  }

  .btn {
    position: relative;
    border: none;
    border-radius: 14px;
    padding: 0.875rem 1rem;
    font-weight: 600;
    font-size: 0.9rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .btn-accept {
    background: var(--success-gradient);
    color: white;
    box-shadow: 0 4px 15px rgba(17, 153, 142, 0.4);
  }

  .btn-reject {
    background: var(--danger-gradient);
    color: white;
    box-shadow: 0 4px 15px rgba(255, 65, 108, 0.4);
  }

  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .btn:active {
    transform: translateY(-1px);
  }

  .btn-content {
    transition: opacity 0.3s ease;
  }

  .btn-loader {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .btn.loading .btn-content {
    opacity: 0;
  }

  .btn.loading .btn-loader {
    opacity: 1;
  }

  /* Enhanced Card Footer */
  .card-footer {
    background: linear-gradient(
      135deg,
      rgba(248, 250, 252, 0.9) 0%,
      rgba(241, 245, 249, 0.7) 100%
    );
    border-top: 1px solid rgba(226, 232, 240, 0.6);
    padding: 1.25rem;
    border-radius: 0 0 20px 20px;
  }

  .footer-time {
    display: flex;
    align-items: center;
    font-weight: 500;
  }

  /* Status Badges */
  .status-badge {
    padding: 0.5rem 1rem;
    border-radius: 25px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    display: inline-flex;
    align-items: center;
    border: 2px solid transparent;
    transition: all 0.3s ease;
  }

  .status-badge.pending {
    background: var(--warning-gradient);
    color: #7c2d12;
    border-color: rgba(252, 176, 64, 0.3);
  }

  .status-badge.accepted {
    background: var(--success-gradient);
    color: white;
    border-color: rgba(17, 153, 142, 0.3);
  }

  .status-badge.rejected {
    background: var(--danger-gradient);
    color: white;
    border-color: rgba(255, 65, 108, 0.3);
  }

  /* Animations */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes headerPulse {
    0%,
    100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }

  @keyframes statsFloat {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5px);
    }
  }

  @keyframes emptyStateFloat {
    0%,
    100% {
      transform: translateY(0) scale(1);
    }
    50% {
      transform: translateY(-10px) scale(1.02);
    }
  }

  @keyframes successPulse {
    0% {
      box-shadow: 0 0 0 0 rgba(17, 153, 142, 0.7);
    }
    70% {
      box-shadow: 0 0 0 20px rgba(17, 153, 142, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(17, 153, 142, 0);
    }
  }

  @keyframes rejectPulse {
    0% {
      box-shadow: 0 0 0 0 rgba(255, 65, 108, 0.7);
    }
    70% {
      box-shadow: 0 0 0 20px rgba(255, 65, 108, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(255, 65, 108, 0);
    }
  }

  @keyframes cardSlideOut {
    from {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(-20px) scale(0.9);
    }
  }

  /* Loading States */
  .booking-card.processing {
    pointer-events: none;
    opacity: 0.7;
  }

  .booking-card.accepted {
    animation: successPulse 0.6s ease-out;
  }

  .booking-card.rejected {
    animation: rejectPulse 0.6s ease-out;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .bookings-container {
      padding: 1rem 0;
    }

    .header-section {
      padding: 1rem 0 2rem;
    }

    .header-icon {
      font-size: 2.5rem;
    }

    .display-5 {
      font-size: 2rem;
    }

    .booking-actions {
      grid-template-columns: 1fr;
      gap: 0.5rem;
    }

    .detail-row {
      padding: 0.75rem;
    }
  }

  /* Notification System */
  .notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 1rem 1.5rem;
    background: white;
    border-radius: 12px;
    box-shadow: var(--shadow-lg);
    border-left: 4px solid;
    z-index: 1000;
    transform: translateX(400px);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    gap: 0.75rem;
    min-width: 300px;
  }

  .notification.show {
    transform: translateX(0);
  }

  .notification.success {
    border-left-color: #10b981;
    color: #065f46;
  }

  .notification.error {
    border-left-color: #ef4444;
    color: #991b1b;
  }

  .notification-icon {
    font-size: 1.25rem;
  }

  .notification-content {
    flex: 1;
  }

  .notification-title {
    font-weight: 600;
    margin-bottom: 0.25rem;
  }

  .notification-message {
    font-size: 0.875rem;
    opacity: 0.9;
  }
</style>

<!-- Enhanced JavaScript -->
<script>
  // Enhanced booking action handler
  function handleBookingAction(event, action) {
    event.preventDefault();

    const button = event.currentTarget;
    const form = button.closest("form");
    const bookingCard = button.closest(".booking-item");
    const card = bookingCard.querySelector(".booking-card");
    const actionButtons = bookingCard.querySelectorAll(
      ".booking-actions button"
    );

    // Add loading state
    actionButtons.forEach((btn) => {
      btn.disabled = true;
      btn.classList.add("loading");
    });

    card.classList.add("processing");

    // Show notification immediately for better UX
    const actionText = action === "accept" ? "Accepting" : "Rejecting";
    showNotification(`${actionText} booking...`, "info");

    // Simulate processing time for smooth animation
    setTimeout(() => {
      // Submit the actual form
      form.submit();
    }, 1000);
  }

  // Notification system
  function showNotification(message, type = "success") {
    // Remove existing notifications
    const existing = document.querySelector(".notification");
    if (existing) existing.remove();

    const notification = document.createElement("div");
    notification.className = `notification ${type}`;

    const iconClass =
      type === "success"
        ? "fa-check-circle"
        : type === "error"
        ? "fa-exclamation-circle"
        : "fa-info-circle";

    notification.innerHTML = `
      <div class="notification-icon">
        <i class="fas ${iconClass}"></i>
      </div>
      <div class="notification-content">
        <div class="notification-message">${message}</div>
      </div>
    `;

    document.body.appendChild(notification);

    // Show notification
    setTimeout(() => notification.classList.add("show"), 100);

    // Hide notification after delay
    setTimeout(() => {
      notification.classList.remove("show");
      setTimeout(() => notification.remove(), 400);
    }, 3000);
  }

  // Initialize animations on page load
  document.addEventListener("DOMContentLoaded", function () {
    // Stagger card animations
    const bookingItems = document.querySelectorAll(".booking-item");
    bookingItems.forEach((item, index) => {
      item.style.animationDelay = `${index * 150}ms`;
    });

    // Add hover effects
    const cards = document.querySelectorAll(".booking-card");
    cards.forEach((card) => {
      card.addEventListener("mouseenter", function () {
        this.style.transform = "translateY(-8px) scale(1.02)";
      });

      card.addEventListener("mouseleave", function () {
        if (!this.classList.contains("processing")) {
          this.style.transform = "translateY(0) scale(1)";
        }
      });
    });

    // Add parallax effect to background (subtle)
    document.addEventListener("mousemove", function (e) {
      const x = (e.clientX / window.innerWidth) * 100;
      const y = (e.clientY / window.innerHeight) * 100;

      document.body.style.backgroundPosition = `${x / 10}% ${y / 10}%`;
    });
  });

  // Handle successful/failed form submissions (if you want to show feedback)
  window.addEventListener("pageshow", function () {
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get("success") === "accept") {
      showNotification("Booking accepted successfully!", "success");
    } else if (urlParams.get("success") === "reject") {
      showNotification("Booking rejected", "error");
    }
  });
</script>
